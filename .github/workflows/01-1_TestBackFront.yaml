name: 01-1 - Integration - TEST

#on:
#  push:
#    branches:
#      - main
#      - 'feature/**'
#  pull_request:

on:
  workflow_call

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      sqlserver:
        image: mcr.microsoft.com/mssql/server:2022-latest
        env:
          SA_PASSWORD: "YourStrong!Passw0rd"
          ACCEPT_EULA: "Y"
        ports:
          - 1433:1433
        options: >-
          --health-cmd "exit 0"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    env:
      ConnectionStrings__DefaultConnection: "Server=localhost;Database=TestDB;User Id=sa;Password=YourStrong!Passw0rd;"

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x # ou adapte selon ta version cible

      - name: Restore dependencies
        run: dotnet restore

      - name: Build the solution
        run: dotnet build --no-restore --configuration Release

      - name: Run tests
        run: dotnet test --no-build --configuration Release --verbosity normal --logger "trx;LogFileName=test-results.trx" --results-directory ./TestResults

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: ./TestResults
          retention-days: 1
      #
      - name: Generate code coverage
        run: |
          dotnet test --collect:"XPlat Code Coverage" --results-directory ./TestResults

      - name: Convert coverage to SonarQube format
        run: |
          dotnet tool install --global dotnet-reportgenerator-globaltool
          reportgenerator -reports:./TestResults/**/coverage.cobertura.xml -targetdir:coverage-report -reporttypes:Cobertura

      - name: Upload coverage report for SonarQube
        uses: actions/upload-artifact@v4
        with:
          name: back-coverage-report
          path: coverage-report