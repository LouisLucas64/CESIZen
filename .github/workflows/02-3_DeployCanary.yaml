name: 02-3 - Deploy - Canary

on:
  workflow_call

jobs:
  AzureCanaryServer:
    runs-on: ubuntu-latest
    environment: CANARY

    env:
      ResourceGroupName: "cesizen-canary"
      ResourceGroupLocation: "francecentral"

    steps:
      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          
      - name: Azure CLI Create Resource Group
        uses: azure/CLI@v2
        with:
          inlineScript: |
            #!/bin/bash
            az group create --name ${{env.ResourceGroupName}} --location ${{env.ResourceGroupLocation}}
            echo "Azure resource group created"
    
      - name: Azure ARM Deploy
        uses: azure/arm-deploy@v2
        with:
          resourceGroupName: ${{env.ResourceGroupName}}
          scope: resourcegroup
          template: https://raw.githubusercontent.com/Azure/azure-quickstart-templates/refs/heads/master/quickstarts/microsoft.compute/vm-simple-linux/azuredeploy.json
          parameters: adminUsername=${{secrets.AZURE_VM_LOGIN}} adminPasswordOrKey=${{secrets.AZURE_VM_PASSWORD}} vmName="Canary-Server" vmSize="Standard_B2s"
      
      - name: Open Port on Security Group
        uses: azure/CLI@v2
        with:
          inlineScript: |
            az network nsg rule create --resource-group ${{env.ResourceGroupName}} --nsg-name SecGroupNet --name OuvrirPort5000 --priority 100 --direction Inbound --access Allow --protocol Tcp --source-address-prefixes "*" --source-port-ranges "*" --destination-address-prefixes "*" --destination-port-ranges 5000
            az network nsg rule create --resource-group ${{env.ResourceGroupName}} --nsg-name SecGroupNet --name OuvrirPort80 --priority 101 --direction Inbound --access Allow --protocol Tcp --source-address-prefixes "*" --source-port-ranges "*" --destination-address-prefixes "*" --destination-port-ranges 80

      - name: Get Public IP et créer règle 
        if: success()
        uses: azure/CLI@v2
        with:
          inlineScript: |
            #!/bin/bash
            az vm show -d -g ${{env.ResourceGroupName}} -n Canary-Server --query publicIps -o tsv
            echo "AZURE_VM_IP=$(az vm show -d -g ${{env.ResourceGroupName}} -n Canary-Server --query publicIps -o tsv)" >> $GITHUB_ENV            
      
      - name: Install Docker on VM
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{env.AZURE_VM_IP}}
          port: ${{secrets.PORT}} 
          username: ${{secrets.AZURE_VM_LOGIN}}
          password: ${{secrets.AZURE_VM_PASSWORD}}
          script: |
            curl -o install_docker.sh https://raw.githubusercontent.com/azure-custom-cli/scripts/refs/heads/main/install_docker_ubuntu.sh
            ls -al
            bash ./install_docker.sh

      - name: Set DNS Domain in ClicBoumPaf
        uses: azure/CLI@v2
        with:
          inlineScript: |
            az network dns record-set a add-record -g ClicBoumPaf -z testeur.clic-boum-paf.com -n cesizen -a ${{env.AZURE_VM_IP}}
            
      - name: Checkout
        uses: actions/checkout@v3
    
      - name: Update compose file
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{env.AZURE_VM_IP}}
          port: ${{secrets.PORT}} 
          username: ${{secrets.AZURE_VM_LOGIN}}
          password: ${{secrets.AZURE_VM_PASSWORD}}
          source: "./docker-compose.yaml"
          target: "."

      - name: Downcase Image Name
        run: echo "IMAGE_NAME_LOWER=${GITHUB_REPOSITORY,,}" >> ${GITHUB_ENV}
  
      - name: Split SHA to 7 Char for version
        run: echo "VERSION=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV

      - name: Start compose file
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{env.AZURE_VM_IP}}
          port: ${{secrets.PORT}} 
          username: ${{secrets.AZURE_VM_LOGIN}}
          password: ${{secrets.AZURE_VM_PASSWORD}}
          script: |
            echo CESIZEN_APP=ghcr.io/${{env.IMAGE_NAME_LOWER}}:canary > .env
            
            docker pull ghcr.io/${{env.IMAGE_NAME_LOWER}}:canary
            docker compose up -d